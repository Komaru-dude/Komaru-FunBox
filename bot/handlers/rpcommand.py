from aiogram import Router
from aiogram.types import Message
from aiogram.enums import ParseMode
from bot import db

rp_router = Router()

@rp_router.message()
async def text(message: Message):
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    if not db.user_exists(user_id):
        db.add_user(user_id)
    if not db.user_have_username(user_id):
        db.add_username(user_id, username=username)
    if not db.user_have_first_name(user_id):
        db.add_first_name(user_id, first_name)

    if message.text and '—Å–∂–µ—á—å' in message.text.lower():
        parts = message.text.split()
        
        if len(parts) > 1:
            target_username = parts[1].lstrip('@')
            if not db.get_user_id_by_username(target_username):
                await message.reply("–°–∏–Ω—Ç–∞–∫—Å–∏—Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ '—Å–∂–µ—á—å @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                return
            else:
                target_id = db.get_user_id_by_username(target_username)
                target_first_name = db.get_first_name_by_id(target_id)
                
                # –°–æ–∑–¥–∞—ë–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª–∏ –æ–±–æ–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                profile_link = f"tg://user?id={user_id}"
                clickable_name_user1 = f"<a href='{profile_link}'>{first_name}</a>"

                target_profile_link = f"tg://user?id={target_id}"
                clickable_name_user2 = f"<a href='{target_profile_link}'>{target_first_name}</a>"
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏ –∏ —Å—Å—ã–ª–∫–∞–º–∏
                await message.answer(f"üî• {clickable_name_user1} —Å–∂—ë–≥ {clickable_name_user2}", parse_mode=ParseMode.HTML)
